{"version":3,"sources":["svg_arc.js","components/svg_circle.js","components/countdown.js","sortCountdown.js","components/main_bar.js","App.js","index.js"],"names":["polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","describeArc","startAngle","endAngle","start","end","largeArcFlag","join","mapNumber","number","in_min","in_max","out_min","out_max","SVGCircle","className","fill","stroke","strokeWidth","d","Countdown","state","name","endDate","timeLeft","millisecToDate","tLeft","years","floor","months","days","hours","min","sec","this","setState","props","count","updateIntervalId","setInterval","updateCount","clearInterval","Date","getTime","prevState","remove","monthsRadius","daysRadius","hoursRadius","minutesRadius","secondsRadius","Row","Col","xs","type","aria-label","onClick","aria-hidden","React","Component","sortCountdown","q","swap","arr","forEach","o","push","Object","assign","w","length","tmp","MainBar","addCountdown","refs","md","lg","style","visibility","ref","p","errMsg","Form","onSubmit","e","preventDefault","currentTarget","reset","Control","input","inputName","placeholder","required","inputDate","Button","variant","value","App","countdowns","dateArr","match","innerHTML","newCountdown","find","c","newState","localStorage","JSON","stringify","removeCountdown","id","filter","localCountdowns","parse","getItem","Container","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da3cf63b.chunk.js","sourcesContent":["// From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nexport default function describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n\n  var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n  var d = [\n      'M',\n      start.x,\n      start.y,\n      'A',\n      radius,\n      radius,\n      0,\n      largeArcFlag,\n      0,\n      end.x,\n      end.y\n  ].join(' ');\n\n  return d;\n}\n\n// From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\nexport function mapNumber(number, in_min, in_max, out_min, out_max) {\n  return (\n    ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n  );\n}\n","import React from \"react\";\nimport describeArc from \"../svg_arc.js\";\n// from https://www.florin-pop.com/blog/2019/05/countdown-built-with-react/\nconst SVGCircle = ({ radius }) => (\n  <svg className=\"countdown-svg\">\n    <path\n      fill=\"none\"\n      stroke=\"#f7c5bf\"\n      strokeWidth=\"4\"\n      d={describeArc(50, 50, 48, 0, radius)}\n      />\n  </svg>\n);\n\nexport default SVGCircle;\n","import React from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport {mapNumber} from \"../svg_arc\";\nimport SVGCircle from \"./svg_circle\";\n\nexport default class Countdown extends React.Component {\n  state = {\n    name: \"\",\n    endDate: 0,\n    timeLeft: 0\n  };\n\n  componentDidMount() {\n    this.setState(() => ({\n      name: this.props.count.name,\n      endDate: this.props.count.endDate\n    }));\n\n    this.updateIntervalId = setInterval(() => this.updateCount(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateIntervalId);\n  }\n\n  updateCount() {\n    const { endDate } = this.state;\n    // calculate time left to endDate\n    let timeLeft = endDate - new Date().getTime();\n    // update state as long as time left is greater than 0,\n    // otherwise remove countdown\n    if (timeLeft > 0) {\n      this.setState(prevState => ({\n        timeLeft: timeLeft \n      }));\n    } else this.props.remove(this.state.name);\n  }\n\n  millisecToDate = timeLeft => {\n    let tLeft = timeLeft;\n    this.years = Math.floor(tLeft / 31104000000);\n    tLeft -= this.years * 31104000000;\n    this.months = Math.floor(tLeft / 2592000000);\n    tLeft -= this.months * 2592000000;\n    this.days = Math.floor(tLeft / 86400000);\n    tLeft -= this.days * 86400000;\n    this.hours = Math.floor(tLeft / 3600000);\n    tLeft -= this.hours * 3600000;\n    this.min = Math.floor(tLeft / 60000);\n    tLeft -= this.min * 60000;\n    this.sec = Math.floor(tLeft / 1000);\n  }\n\n  render() {\n  const { name, timeLeft} = this.state;\n  this.millisecToDate(timeLeft);\n  // Mapping the date values to radius values\n  const monthsRadius = mapNumber(this.months, 12, 0, 0, 360);\n  const daysRadius = mapNumber(this.days, 30, 0, 0, 360);\n  const hoursRadius = mapNumber(this.hours, 24, 0, 0, 360);\n  const minutesRadius = mapNumber(this.min, 60, 0, 0, 360);\n  const secondsRadius = mapNumber(this.sec, 60, 0, 0, 360);\n\n    return (\n      <Row className=\"d-flex justify-content-center\">\n        <Col xs={4} className=\"d-flex align-items-center \n          justify-content-center name\"\n        >\n          <p>{name}</p>\n        </Col>\n        <Col className=\"countdown-item\">\n          <p>{this.years}</p>\n          <span>YEARS</span>\n        </Col>\n        <Col className=\"countdown-item\">\n          <SVGCircle radius={monthsRadius} />\n          <p>{this.months}</p>\n          <span>MONTHS</span>\n        </Col>\n        <Col className=\"countdown-item\">\n          <SVGCircle radius={daysRadius} />\n          <p>{this.days}</p>\n          <span>DAYS</span>\n        </Col>\n        <Col className=\"countdown-item\">\n          <SVGCircle radius={hoursRadius} />\n          <p>{this.hours}</p>\n          <span>HOURS</span>\n        </Col>\n        <Col className=\"countdown-item\">\n          <SVGCircle radius={minutesRadius} />\n          <p>{this.min}</p>\n          <span>MINUTES</span>\n        </Col>\n        <Col className=\"countdown-item\">\n          <SVGCircle radius={secondsRadius} />\n          <p>{this.sec}</p>\n          <span>SECONDS</span>\n        </Col>\n        <Col xs={1}>\n          <button \n            type=\"button\" \n            className=\"close ml-3\" \n            aria-label=\"Close\"\n            onClick={() => this.props.remove(name)}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </Col>\n      </Row>\n    );\n  }\n}\n","export default function sortCountdown(q) {\n  const arr = [];\n  // deep copy array of objects into new array\n  q.forEach(o => {\n    arr.push(Object.assign({}, o));\n  });\n\n  // keep sorting as long as there was at least 1 position swap in array\n  let swap;\n  do {\n    swap = 0;\n    for (let w = 0; w < arr.length; ++w) {\n      if (w < arr.length -1) {\n// if date of current object is not greater than of next object, do nothing\n        if (arr[w].endDate > arr[w + 1].endDate) {\n          let tmp = {};\n          // save object at current index into tmp object\n          Object.assign(tmp, arr[w]);\n          // copy next object into current object\n          Object.assign(arr[w], arr[w + 1]);\n          // copy tmp object into next object\n          Object.assign(arr[w + 1], tmp);\n          swap = 1;\n        }\n      }\n    }\n  } while(swap);\n  return arr;\n}\n","import React from \"react\";\nimport { Row,\n  Col,\n  Form,\n  Button\n  } from \"react-bootstrap\";\n\nexport default function MainBar({addCountdown}) {\n  const refs = {};\n\n  const addCd = e => {\n    e.preventDefault();\n    if (!addCountdown(refs)) e.currentTarget.reset();\n  };\n\n  return ( \n    <Row className=\"bg-primary main-bar main-bar-h sticky-top\">\n      <Col md={3} lg={4} className=\"d-flex flex-row align-items-center\n        justify-content-center\n        \">\n        <h3>Countdown Timers.</h3>\n      </Col>\n      <Col className=\"d-flex flex-row justify-content-end align-items-center\">\n        <p className=\"text-danger invalid-name\" \n          style={{visibility: \"hidden\"}}\n          ref={p => refs.errMsg = p}\n        >Unique name required</p>\n      </Col>\n      <Form onSubmit={addCd} className=\"d-flex flex-row align-items-center\">\n        <Form.Row>\n          <Col xs={5}>\n            <Form.Control type=\"text\"\n              ref={input => refs.inputName = input}\n              placeholder=\"Enter countdown's name\"\n              required\n            />\n          </Col>\n          <Col xs={3}>\n            <input type=\"date\"\n              aria-label=\"input date\"\n              ref={input => refs.inputDate = input}\n              required\n            />\n          </Col>\n          <Col>\n            <Button variant=\"secondary\" type=\"submit\" value=\"\">Add Countdown</Button>\n          </Col>\n        </Form.Row>\n      </Form>\n    </Row>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Container,\n  Row,\n  Col,\n  } from \"react-bootstrap\";\nimport Countdown from \"./components/countdown\";\nimport sortCountdown from \"./sortCountdown\";\nimport MainBar from \"./components/main_bar\";\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    countdowns: []\n  };\n\n  componentDidMount() {\n    // load dates from local storage if they were saved there\n    const localCountdowns = JSON.parse(localStorage.getItem(\"countdowns\"));\n    if (localCountdowns) {\n      this.setState(() => ({\n        countdowns: localCountdowns\n      }));\n    } else {\n      this.setState(() => ({\n        countdowns: []\n      }));\n    }\n  }\n\n  addCountdown = ({errMsg, inputName, inputDate}) => {\n    // convert date input into numbers array\n    const name = inputName.value;\n    const dateArr = inputDate.value.match(/\\d+/g);\n    // validate entered date, required for safari since it doesn't support\n    // \"required\" form attribute\n    if (!dateArr && dateArr.length > 0) {\n      errMsg.innerHTML = \"Enter valid date\";\n      errMsg.style.visibility = \"visible\";\n      return -1;\n    }\n    const newCountdown = {\n      name,\n    // create new date from using dateArr and return it in milliseconds\n      endDate: new Date(dateArr).getTime()\n    };\n    // validate unique name, required for safari since it doesn't support\n    // \"required\" form attribute\n    if (this.state.countdowns.find(c => c.name === name)) {\n        errMsg.innerHTML = \"Unique name required\";\n        errMsg.style.visibility = \"visible\";\n      return -1;\n    }\n    this.setState(prevState => {\n      const countdowns = [\n        ...prevState.countdowns,\n        newCountdown\n      ];\n      // make new state with sorted countdowns\n      const newState = {\n        countdowns: sortCountdown(countdowns)\n      };\n      errMsg.style.visibility = \"hidden\";\n      // store countdowns in local storage\n      localStorage.countdowns = JSON.stringify(newState.countdowns);\n\n      return newState;\n    });\n    return 0;\n  }\n\n  removeCountdown = id => {\n    this.setState(prevState => {\n      const newState = {\n        countdowns: prevState.countdowns.filter(c => c.name !== id)\n      };\n      // store countdowns in local storage\n      localStorage.countdowns = JSON.stringify(newState.countdowns);\n\n      return newState;\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"bg-info\">\n        <MainBar addCountdown={this.addCountdown} />\n        <Row>\n          <Col>{            \n            this.state.countdowns.map(c => \n             <Countdown count={c}\n               key={c.name} \n               remove={this.removeCountdown}\n             />\n            )\n          }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}